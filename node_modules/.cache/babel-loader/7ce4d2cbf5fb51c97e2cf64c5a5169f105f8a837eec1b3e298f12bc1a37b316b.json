{"ast":null,"code":"var _jsxFileName = \"/Users/vonreifschneider/VSCodeProjects/lena/pairs-game/src/components/Cards/Cards.tsx\",\n  _s = $RefreshSig$();\nimport Card from '../Card/Card';\nimport { schuffledCards } from '../../utils/schuffledCards.util';\nimport { useEffect, useState } from 'react';\nimport './Cards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s();\n  const [cardProps, setCardProps] = useState([]);\n  const [clickedCardSrc, setClickedCardSrc] = useState('');\n  useEffect(() => {\n    setCardProps(schuffledCards());\n    console.log(cardProps);\n  }, []);\n  const handleClick = id => {\n    setCardProps(prevState => {\n      let newCardProps = prevState.map(card => card.id === id ? {\n        ...card,\n        flipped: !card.flipped\n      } : card);\n      const clickedCard = newCardProps.find(card => card.id === id);\n      if (clickedCardSrc === '') {\n        setClickedCardSrc(clickedCard.src);\n      } else if (clickedCard.src === clickedCardSrc) {\n        // setCardProps((prevState) => prevState.map((card) =>\n        //     card.src === clickedCardSrc ? { ...card, matched: true } : card\n        // )\n        // )\n        newCardProps = newCardProps.map(card => card.src === clickedCardSrc ? {\n          ...card,\n          matched: true\n        } : card);\n        setClickedCardSrc('');\n      } else {\n        setClickedCardSrc('');\n        setTimeout(() => {\n          // setCardProps((prevState) =>\n          //     prevState.map((card) =>\n          //         !card.matched ? { ...card, flipped: false } : card\n          //     ))\n        }, 1000);\n      }\n      return newCardProps;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: cardProps.map(props => /*#__PURE__*/_jsxDEV(Card, {\n      id: props.id,\n      src: props.src,\n      flipped: props.flipped,\n      matched: props.matched,\n      onClick: () => handleClick(props.id)\n    }, props.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(Cards, \"Gz9hxMO4oFpoIFMYVPSpbAQw4HQ=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["Card","schuffledCards","useEffect","useState","jsxDEV","_jsxDEV","Cards","_s","cardProps","setCardProps","clickedCardSrc","setClickedCardSrc","console","log","handleClick","id","prevState","newCardProps","map","card","flipped","clickedCard","find","src","matched","setTimeout","className","children","props","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vonreifschneider/VSCodeProjects/lena/pairs-game/src/components/Cards/Cards.tsx"],"sourcesContent":["import Card from '../Card/Card'\nimport { schuffledCards } from '../../utils/schuffledCards.util';\nimport { useEffect, useState } from 'react';\nimport { CardProps } from '../Card/Card';\nimport './Cards.css';\n\n\nconst Cards = () => {\n    const [cardProps, setCardProps] = useState<CardProps[]>([])\n    const [clickedCardSrc, setClickedCardSrc] = useState<string>('')\n    useEffect(() => {\n        setCardProps(schuffledCards())\n        console.log(cardProps)\n    }, [])\n\n    const handleClick = (id: number) => {\n        setCardProps((prevState) => {\n            let newCardProps = prevState.map((card) =>\n                card.id === id ? { ...card, flipped: !card.flipped } : card\n            )\n\n            const clickedCard = newCardProps.find((card) => card.id === id)\n\n            if (clickedCardSrc === '') {\n                setClickedCardSrc(clickedCard!.src)\n            }\n\n            else if\n                (clickedCard!.src === clickedCardSrc) {\n                // setCardProps((prevState) => prevState.map((card) =>\n                //     card.src === clickedCardSrc ? { ...card, matched: true } : card\n                // )\n                // )\n                newCardProps = newCardProps.map((card) =>\n                    card.src === clickedCardSrc ? { ...card, matched: true } : card)\n                setClickedCardSrc('')\n            } else {\n                setClickedCardSrc('')\n                setTimeout(() => {\n                    // setCardProps((prevState) =>\n                    //     prevState.map((card) =>\n                    //         !card.matched ? { ...card, flipped: false } : card\n                    //     ))\n                }, 1000)\n            }\n            return newCardProps;\n        })\n    }\n\n    return (\n        <div className=\"cards\">\n            {cardProps.map((props) => (\n                <Card key={props.id} id={props.id} src={props.src} flipped={props.flipped} matched={props.matched} onClick={() => handleClick(props.id)}></Card>\n            )\n            )}\n        </div>\n    )\n}\n\nexport default Cards;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B,SAASC,cAAc,QAAQ,iCAAiC;AAChE,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrB,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAc,EAAE,CAAC;EAC3D,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAS,EAAE,CAAC;EAChED,SAAS,CAAC,MAAM;IACZO,YAAY,CAACR,cAAc,CAAC,CAAC,CAAC;IAC9BW,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAIC,EAAU,IAAK;IAChCN,YAAY,CAAEO,SAAS,IAAK;MACxB,IAAIC,YAAY,GAAGD,SAAS,CAACE,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACJ,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGI,IAAI;QAAEC,OAAO,EAAE,CAACD,IAAI,CAACC;MAAQ,CAAC,GAAGD,IAC3D,CAAC;MAED,MAAME,WAAW,GAAGJ,YAAY,CAACK,IAAI,CAAEH,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAE/D,IAAIL,cAAc,KAAK,EAAE,EAAE;QACvBC,iBAAiB,CAACU,WAAW,CAAEE,GAAG,CAAC;MACvC,CAAC,MAEI,IACAF,WAAW,CAAEE,GAAG,KAAKb,cAAc,EAAE;QACtC;QACA;QACA;QACA;QACAO,YAAY,GAAGA,YAAY,CAACC,GAAG,CAAEC,IAAI,IACjCA,IAAI,CAACI,GAAG,KAAKb,cAAc,GAAG;UAAE,GAAGS,IAAI;UAAEK,OAAO,EAAE;QAAK,CAAC,GAAGL,IAAI,CAAC;QACpER,iBAAiB,CAAC,EAAE,CAAC;MACzB,CAAC,MAAM;QACHA,iBAAiB,CAAC,EAAE,CAAC;QACrBc,UAAU,CAAC,MAAM;UACb;UACA;UACA;UACA;QAAA,CACH,EAAE,IAAI,CAAC;MACZ;MACA,OAAOR,YAAY;IACvB,CAAC,CAAC;EACN,CAAC;EAED,oBACIZ,OAAA;IAAKqB,SAAS,EAAC,OAAO;IAAAC,QAAA,EACjBnB,SAAS,CAACU,GAAG,CAAEU,KAAK,iBACjBvB,OAAA,CAACL,IAAI;MAAgBe,EAAE,EAAEa,KAAK,CAACb,EAAG;MAACQ,GAAG,EAAEK,KAAK,CAACL,GAAI;MAACH,OAAO,EAAEQ,KAAK,CAACR,OAAQ;MAACI,OAAO,EAAEI,KAAK,CAACJ,OAAQ;MAACK,OAAO,EAAEA,CAAA,KAAMf,WAAW,CAACc,KAAK,CAACb,EAAE;IAAE,GAA7Ha,KAAK,CAACb,EAAE;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA4H,CAEnJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAA1B,EAAA,CAlDKD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAoDX,eAAeA,KAAK;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}