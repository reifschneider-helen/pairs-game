{"ast":null,"code":"var _jsxFileName = \"/Users/vonreifschneider/VSCodeProjects/lena/pairs-game/src/components/Cards/Cards.tsx\",\n  _s2 = $RefreshSig$();\nimport Card from '../Card/Card';\n// import alpaka_01 from '../../assets/alpaka_01.png';\n// import alpaka_02 from '../../assets/alpaka_02.png';\n// import alpaka_03 from '../../assets/alpaka_03.png';\n// import alpaka_04 from '../../assets/alpaka_04.png';\n// import alpaka_05 from '../../assets/alpaka_05.png';\nimport { buildCardProps } from '../../utils/card.util';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Cards = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [cardProps, setCardProps] = useState([]); // Typ hinzufügen\n\n  useEffect(() => {\n    const cards = buildCardProps();\n    setCardProps(cards); // Jetzt ist der Typ korrekt\n  }, []);\n  const Cards = () => {\n    _s();\n    const [cardProps, setCardProps] = useState([]);\n    useEffect(() => {\n      setCardProps(buildCardProps());\n      //  console.log(cardProps)\n    }, []);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: cardProps.map(props => /*#__PURE__*/_jsxDEV(Card, {\n        src: props.src,\n        flipped: props.flipped\n      }, props.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this))\n    }, void 0, false);\n  };\n  _s(Cards, \"oZJ15z+H4KqYydcbKIv/iqXKyKw=\");\n};\n_s2(Cards, \"oZJ15z+H4KqYydcbKIv/iqXKyKw=\");\n_c = Cards;\nexport default Cards;\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["Card","buildCardProps","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Cards","_s2","_s","$RefreshSig$","cardProps","setCardProps","cards","children","map","props","src","flipped","key","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/vonreifschneider/VSCodeProjects/lena/pairs-game/src/components/Cards/Cards.tsx"],"sourcesContent":["import Card from '../Card/Card'\n// import alpaka_01 from '../../assets/alpaka_01.png';\n// import alpaka_02 from '../../assets/alpaka_02.png';\n// import alpaka_03 from '../../assets/alpaka_03.png';\n// import alpaka_04 from '../../assets/alpaka_04.png';\n// import alpaka_05 from '../../assets/alpaka_05.png';\nimport { buildCardProps } from '../../utils/card.util';\nimport { useEffect, useState } from 'react';\n\n\n\n\nconst Cards: React.FC = () => {\n    const [cardProps, setCardProps] = useState<CardProps[]>([]); // Typ hinzufügen\n  \n    useEffect(() => {\n      const cards = buildCardProps(); \n      setCardProps(cards); // Jetzt ist der Typ korrekt\n    }, []);\nconst Cards = () => {\n    const [cardProps, setCardProps] = useState([])\n    useEffect(() => {\n        setCardProps(buildCardProps())\n        //  console.log(cardProps)\n    }, [])\n\n    return (\n        <>\n            {cardProps.map((props) => (\n                <Card key = {props.key} src={props.src} flipped={props.flipped}></Card>\n            )\n            )}\n       \n        {/* <Card id={1} src={alpaka_01} flipped={false}></Card>\n        <Card id={2} src={alpaka_01} flipped={false}></Card>\n        <Card id={3} src={alpaka_01} flipped={false}></Card>\n        <Card id={4} src={alpaka_01} flipped={false}></Card>\n        <Card id={5} src={alpaka_01} flipped={false}></Card> */}\n        </>\n)\n}}\n\nexport default Cards;"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA,SAASC,cAAc,QAAQ,uBAAuB;AACtD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAK5C,MAAMC,KAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAc,EAAE,CAAC,CAAC,CAAC;;EAE7DD,SAAS,CAAC,MAAM;IACd,MAAMY,KAAK,GAAGb,cAAc,CAAC,CAAC;IAC9BY,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EACV,MAAMN,KAAK,GAAGA,CAAA,KAAM;IAAAE,EAAA;IAChB,MAAM,CAACE,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;IAC9CD,SAAS,CAAC,MAAM;MACZW,YAAY,CAACZ,cAAc,CAAC,CAAC,CAAC;MAC9B;IACJ,CAAC,EAAE,EAAE,CAAC;IAEN,oBACII,OAAA,CAAAE,SAAA;MAAAQ,QAAA,EACKH,SAAS,CAACI,GAAG,CAAEC,KAAK,iBACjBZ,OAAA,CAACL,IAAI;QAAmBkB,GAAG,EAAED,KAAK,CAACC,GAAI;QAACC,OAAO,EAAEF,KAAK,CAACE;MAAQ,GAAlDF,KAAK,CAACG,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgD,CAE1E;IAAC,gBAOH,CAAC;EAEX,CAAC;EAAAd,EAAA,CArBKF,KAAK;AAqBV,CAAC;AAAAC,GAAA,CA5BID,KAAe;AAAAiB,EAAA,GAAfjB,KAAe;AA8BrB,eAAeA,KAAK;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}